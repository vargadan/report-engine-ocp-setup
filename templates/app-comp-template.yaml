apiVersion: v1
kind: Template
metadata:
  name: ctr-app-comp-template
labels:
  template: ctr-app-comp-template
  app: ctr-app-comp-template
metadata:
  annotations:
    description: Creates CTR application component instance for messaging
    iconClass: icon-ctr-app-comp
    tags: ctr-app-comp-template
  name: ctr-app-comp-template
message: CTR application component
parameters:
- description: Service Component Name
  displayName: Service Component Name
  name: APP_NAME
  required: true
- description: Project Name
  displayName: Project Name
  name: PROJECT_NAME
  required: true
objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}
  spec:
    ports:
    - name: client
      nodePort: 0
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: ${APP_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: ${APP_NAME}
      port: 8080
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      name: ${APP_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${APP_NAME}
      spec:
        containers:
        - capabilities: {}
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 3
          name: ${APP_NAME}
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 3
            timeoutSeconds: 3
          securityContext:
            capabilities: {}
            privileged: false
        dnsPolicy: ClusterFirst
        restartPolicy: Always
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: '${APP_NAME}:latest'
          namespace: ${PROJECT_NAME}
      type: ImageChange